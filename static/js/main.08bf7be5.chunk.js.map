{"version":3,"sources":["components/Navbar/index.js","components/Header/index.js","components/Main/index.js","components/Footer/index.js","components/ClickTile/index.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","score","topScore","Header","Main","children","Footer","ClickTile","alt","name","src","image","onClick","App","state","tiles","clickedTiles","handleEvent","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffleTiles","_this","indexOf","console","log","setState","concat","Object","toConsumableArray","_this2","this","components_Navbar","components_Header","components_Main","map","tile","components_ClickTile","key","components_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"moFAsBeA,MAnBf,SAAgBC,GACd,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,eACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBC,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBAC1JT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BO,GAAG,aAC3CV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,UAAkCJ,EAAMY,QAE1CX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,cAAsCJ,EAAMa,qBCCrCC,MAbf,WACE,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,UACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,oHCDOW,MAJf,SAAcf,GACZ,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQJ,EAAMgB,iBCGvBC,MAJf,SAAgBjB,GACd,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUJ,EAAMgB,iBCQzBE,MARf,SAAmBlB,GACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKgB,IAAKnB,EAAMoB,KAAMC,IAAKrB,EAAMsB,MAAOC,QAAS,kBAAMvB,EAAMuB,QAAQvB,EAAMW,gBC8ElEa,6MA3EbC,MAAQ,CACNC,QACAC,aAAc,GACdf,MAAO,EACPC,SAAU,KAGZe,YAAc,SAAAjB,IAEZ,SAAsBkB,GAIpB,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAOzBO,CAAaC,EAAKb,MAAMC,QAEqB,IAAzCY,EAAKb,MAAME,aAAaY,QAAQ5B,IAClC6B,QAAQC,IAAIH,EAAKb,MAAME,aAAaY,QAAQ5B,IAC5C2B,EAAKI,SAAS,CACZf,aAAY,GAAAgB,OAAAC,OAAAC,EAAA,EAAAD,CAAMN,EAAKb,MAAME,cAAjB,CAA+BhB,IAC3CC,MAAO0B,EAAKb,MAAMb,MAAO,KAElB0B,EAAKb,MAAMb,MAAQ0B,EAAKb,MAAMZ,SACvCyB,EAAKI,SAAS,CACZ9B,MAAO,EACPC,SAAUyB,EAAKb,MAAMb,MACrBe,aAAc,KAGdW,EAAKI,SAAS,CACZ9B,MAAO,EACPe,aAAc,8EAOb,IAAAmB,EAAAC,KACP,OACE9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6C,EAAD,CAAQpC,MAAOmC,KAAKtB,MAAMb,MAAOC,SAAUkC,KAAKtB,MAAMZ,WACtDZ,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAAC+C,EAAD,KACGxB,EAAMyB,IAAI,SAAAC,GAAI,OACbnD,EAAAC,EAAAC,cAACkD,EAAD,CACE1C,GAAIyC,EAAKzC,GACT2C,IAAKF,EAAKzC,GACVS,KAAMgC,EAAKhC,KACXE,MAAO8B,EAAK9B,MACZC,QAASuB,EAAKlB,iBAIpB3B,EAAAC,EAAAC,cAACoD,EAAD,cAvEUC,aCHlBC,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.08bf7be5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n  return <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div className=\"navbar-brand\">Clicky Game</div>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n  <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item\">\n        <div className=\"nav-link\">Score: {props.score}</div>\n      </li>\n      <li className=\"nav-item\">\n        <div className=\"nav-link\">Top Score: {props.topScore}</div>\n      </li>\n    </ul>\n  </div>\n</nav>\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">Memory</h1>\n        <p className=\"lead\">\n          Click on the characters to win points, but don't click on the same character more than once. Good Luck!\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Main(props) {\n  return <div className=\"main\">{props.children}</div>;\n}\n\nexport default Main;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer(props) {\n  return <div className=\"footer\">{props.children}</div>;\n}\n\nexport default Footer;\n","// export default ClickTile;\nimport React from \"react\";\nimport \"./style.css\";\n\nfunction ClickTile(props) {\n  return (\n    <div className=\"card click-item\">\n      <img alt={props.name} src={props.image} onClick={() => props.onClick(props.id)}/>\n    </div>\n  );\n}\n\nexport default ClickTile;\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport ClickTile from \"./components/ClickTile\";\nimport tiles from \"./tiles.json\";\n\nclass App extends Component {\n  // Setting this.state.tiles to the tiles json array\n  state = {\n    tiles,\n    clickedTiles: [],\n    score: 0,\n    topScore: 0\n  };\n\n  handleEvent = id => {\n\n    function shuffleTiles(array) {\n      var currentIndex = array.length, temporaryValue, randomIndex;\n    \n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n    \n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n    \n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n    \n      return array;\n    }\n    \n    // Call shuffle tiles here\n    shuffleTiles(this.state.tiles);\n    \n    if (this.state.clickedTiles.indexOf(id) === -1) {\n      console.log(this.state.clickedTiles.indexOf(id));\n      this.setState({\n        clickedTiles: [...this.state.clickedTiles, id],\n        score: this.state.score +1\n      })\n    } else if (this.state.score > this.state.topScore) {\n      this.setState({ \n        score: 0,\n        topScore: this.state.score,\n        clickedTiles: []\n      }) \n    }  else {\n        this.setState({\n          score: 0,\n          clickedTiles: []\n        })\n      }\n    \n  };\n  \n  // Map over this.state.tiles and render a ClickTile component for each tile object\n  render() {\n    return (\n      <div>\n        <Navbar score={this.state.score} topScore={this.state.topScore} />\n        <Header />\n        <Main>\n          {tiles.map(tile => (\n            <ClickTile\n              id={tile.id}\n              key={tile.id}\n              name={tile.name}\n              image={tile.image}\n              onClick={this.handleEvent}\n            />\n          ))}\n        </Main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}